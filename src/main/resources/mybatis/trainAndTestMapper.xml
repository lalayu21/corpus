<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace必须指向Dao接口 -->
<mapper namespace="com.corpus.dao.TrainAndTestDao">

	<cache eviction="FIFO" flushInterval="60000" size="500" readOnly="true"></cache>
	
	<!-- 将新的训练集和测试集insert到数据库 -->
	<insert id="insert2setlist" parameterType="TrainSet">
		insert into setlist(corpusID, type, percent, train, test, labelType, name) 
		values(#{corpusID}, #{type}, #{percent}, #{train}, #{test}, #{labelType}, #{name})
	</insert>
	
	<!-- 根据名称获取训练集和测试集的专属id -->
	<select id="selectIdByName" parameterType="string" resultType="int">
		select id from setlist where name = #{name}
	</select>
	
	<!-- 将训练集和测试集所包含的训练和测试数据insert到setwavelist中 -->
	<insert id="insert2setwavelist" parameterType="TrainSet">
		insert into setwavelist(setID, waveID, type) 
		values(#{id}, #{waveID}, #{typeFlag})
	</insert>
	
	<!-- 根据corpusID获取set list -->
	<select id="selectListByCorpus" parameterType="int" resultType="TrainSet">
		select id, name, type, percent, train, test, labelType, useTime, flag from setlist where corpusId = #{corpus}
	</select>
	
	<!-- 根据setID获取某一个训练集的使用情况 -->
	<select id="selectUsageBySetID" parameterType="int" resultType="Usage">
		select id, user, time, result, desp. flag from setuse where setID = #{setID}
	</select>
	
	<!-- 为训练集id添加新的使用信息 -->
	<insert id="insertUsage" parameterType="Usage">
		insert into setuse(setID, user, time, desp, wavePath) 
		values(#{setID}, #{user}, now(), #{desp}, #{wavePath})
	</insert>
	
	<!-- 为训练集id更新信息 -->
	<update id="updateUsage" parameterType="Usage">
		update setuse set user = #{user}, desp = #{desp}, result = #{result} where id = #{setID}
	</update>
	
	<!-- 获取id的使用情况 -->
	<select id="selectUsageById" parameterType="int" resultType="Usage">
		select id, user, time, result, desp from setuse where id = #{id}
	</select>
	
	<!-- 获取setID所属的语料库 -->
	<select id="selectCorpusBySetID" parameterType="int" resultType="Corpus">
		select corpus.id, corpus.wavePath, corpus.labelPath, corpus.labelType from corpus inner join setlist on setlist.corpusID = corpus.id where setlist.id = #{setID}
	</select>
	
	<!-- 根据setID获取其对应的音频列表 -->
	<select id="selectWaveListBySetIDPraat" parameterType="TrainSet" resultType="PraatDetailSelect">
		select wave.wave, praat.result, praat.starttime, praat.endtime from praat inner join wave on wave.id = praat.wave where wave.id in (select waveID from setwavelist where setID = #{id} and type = #{typeFlag})
	</select>
	<select id="selectWaveListBySetIDWavetagger" parameterType="TrainSet" resultType="PraatDetailSelect">
		select wave, context, other, starttime, endtime from wavetagger where id in (select waveID from setwavelist where setID = #{id} and type = #{typeFlag})
	</select>
	<select id="selectWaveListBySetIDFile" parameterType="TrainSet" resultType="PraatDetailSelect">
		select wave, context, time from wavetagger where id in (select waveID from setwavelist where setID = #{id} and type = #{typeFlag})
	</select>
	
	<!-- 更新训练集信息 -->
	<update id="updateTrainSet" parameterType="int">
		update setlist set useTime = useTime + 1 where id = #{id}
	</update>
	
	<!-- 根据使用者和训练集id获取使用记录的唯一id -->
	<select id="selectIdByUserAndSetid" parameterType="Usage" resultType="int">
		select id from setuse where setID = #{setID} and user = #{user}
	</select>
	
	<!-- 将使用记录中的ip信息存入ip表中 -->
	<insert id="insert2ip" parameterType="Usage">
		insert into ip(ip, username, password, userID) 
		values(#{ip}, #{linuxUser}, #{linuxPaw}, #{id});
	</insert>
	
	<!-- 根据用户名获取其使用情况 -->
	<select id="selectUsageByUserAndSetid" parameterType="Usage" resultType="Usage">
		select * from setuse where user = #{user} and setID = #{setID}
	</select>
	
	<!-- 根据usageid获取ip -->
	<select id="selectUsageFromIp" parameterType="int" resultType="Corpus">
		select ip, username, password from ip where userID = #{id}
	</select>
	
	<!-- 将训练集和测试集的状态从未完成改为完成 -->
	<update id="updateSetFlag" parameterType="int">
		update setlist set flag = 1 where id = #{id}
	</update>
	
	<!-- 根据语料库id和名称获取训练集和测试集的唯一id -->
	<select id="selectIdByCorpusAndName" parameterType="trainSet" resultType="int">
		select id from setlist where name = #{name} and corpusID = #{corpusID}
	</select>
	
	<!-- 将训练集和测试集的使用情况的状态设置为1 -->
	<update id="updateSetUseFlag" parameterType="int">
		update setuse set flag = 1 where id = #{id}
	</update>
	
</mapper> 
